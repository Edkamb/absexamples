Int betterThanAmortized(Int n, Int m, VM x) {
<<<<<<< HEAD
	Fut<Int> f ; Int z ;
	if (n==0) return 0;
	else if (n>m) { 
		VM v = new VM() ;
		f = x!betterThanAmortized(n-1,m,v) ; 
		z = f.get ; 
		return 0 ;
	} else { 
		VM v = new VM() ; 
		VM w = new VM() ;
		f = v!betterThanAmortized(n-1,m,w) ; 
		z = f.get ; 
		return 0 ; 
	}
}

{
	VM x = new VM() ; Int z ;
	Fut<Int> f = this!betterThanAmortized(200, 100, x) ;
	z = f.get ;
	return 0 ;
=======
Fut<Int> f ; Int z ;
if (n==0) return 0;
else if (n>m) { 
      VM v = new VM() ;
f = x!betterThanAmortized(n-1,m,v) ; 
      z = f.get ; 
      return 0 ;
} else { 
      VM v = new VM() ; 
      VM w = new VM() ;
f = v!betterThanAmortized(n-1,m,w) ; 
      z = f.get ; 
      return 0 ; 
    }
}

{
VM x = new VM() ; Int z ;
  Fut<Int> f = this!betterThanAmortized(200, 100, x) ;
z = f.get ;
  return 0 ;
>>>>>>> 9deb9b51ba5cf8e34998b2726fbd2bc5666b88cb
}